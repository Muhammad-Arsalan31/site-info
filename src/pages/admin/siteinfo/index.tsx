import { type NextPage } from "next";
import Head from "next/head";
import { AddFormModal } from "@Components/Modal";
import { trpc } from "../../../utils/trpc";
import { DataTable } from "mantine-datatable";
import { useEffect, useState } from "react";
import { Box, Center, Flex, Grid, Group, Title } from "@mantine/core";
const SiteInfo: NextPage = () => {
  const [limit, setLimit] = useState(10);
  const [cursor, setCursor] = useState<number>();
  const [page, setPage] = useState(1);
  const { data, isLoading, refetch } = trpc.siteinfo.paginated.useInfiniteQuery(
    {
      limit: limit,
      // cursor:cursor ?? null
    },
    {
      getNextPageParam: (lastPage) => lastPage.nextCursor,
    }
  );

  useEffect(() => {
    refetch();

    // return () => {
    //   second
    // }
  }, [limit]);

  if (data) {
    console.log(data);
  }
  return (
    <>
      <Head>
        <title>Site Information</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Flex
        mih={50}
        bg="rgba(0, 0, 0, .3)"
        gap="xl"
        justify="space-between"
        align="center"
        direction="row"
        wrap="wrap"
      >
        <Title>Site Information</Title>
        <AddFormModal />
      </Flex>

      <Box>
        <DataTable
          withBorder
          records={data?.pages[0]?.items}
          columns={[
            { accessor: "id", width: 100 },
            {
              accessor: "client",
              width: 100,
              render: ({ client }) => <>{client.name}</>,
            },
            {
              accessor: "invoice_status",
              // accessor: "invoice_status",
              width: 100,
              render: ({ invoice_status }) => (
                <>{invoice_status?.invoice_status}</>
              ),
            },
          ]}
          totalRecords={data?.pages[0]?.totalDocs}
          recordsPerPage={limit}
          page={page}
          fetching={isLoading}
          onPageChange={(p) => {
            setPage(p);
            setCursor(data?.pages[0]?.nextCursor);
          }}
          recordsPerPageOptions={[10, 50, 100]}
          onRecordsPerPageChange={setLimit}
        />
      </Box>
    </>
  );
};

export default SiteInfo;
