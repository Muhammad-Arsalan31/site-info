import { type NextPage } from "next";
import Head from "next/head";
import AppShellDemo from "@Components/Shell";
import { trpc } from "../../../utils/trpc";
import { DataTable } from "mantine-datatable";
import { useEffect, useState } from "react";
import { Box } from "@mantine/core";
const SiteInfo: NextPage = () => {
  const [limit, setLimit] = useState(10);
  const [cursor, setCursor] = useState<number>();
  const [page, setPage] = useState(1)
  const { data, isLoading ,refetch} = trpc.siteinfo.paginated.useInfiniteQuery({
    limit: limit,
    // cursor:cursor ?? null
  },
  {
    getNextPageParam: (lastPage) => lastPage.nextCursor,
  },
  );

  useEffect(() => {
    refetch()
  
    // return () => {
    //   second
    // }
  }, [limit])
  
  if(data){

    console.log(data)
  }
  return (
    <>
      <Head>
        <title>Site info Page</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>Hello site info</h1>
      <Box>

          <DataTable
        withBorder
        records={data?.pages[0]?.items}
        columns={[
          { accessor: 'id', width: 100 },
          { accessor: 'client_id', width: 100 },
        ]}
        totalRecords={data?.pages[0]?.totalDocs}
        recordsPerPage={limit}
        page={page}
        fetching={isLoading}
        onPageChange={(p) => {setPage(p);setCursor(data?.pages[0]?.nextCursor)}}
        recordsPerPageOptions={[10,50,100]}
        onRecordsPerPageChange={setLimit}
      />
        </Box>
    </>
  );
};

export default SiteInfo;
